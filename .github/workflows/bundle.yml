name: Create Resource Bundle

on:
  push:
    branches: '*'
    tags: 'v*'

  pull_request:
    branches:
      - master

jobs:
  build_qemu_linux:
    name: Build QEMU on Linux
    runs-on: ubuntu-latest
    container: alpine:3.21
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Ruby and Git
        run: |
          apk update && apk upgrade
          apk add --no-cache ruby ruby-bundler ruby-minitest file git

      - name: Run CI Script
        run: ./ci.rb

      - name: Run Tests
        run: ./test.rb

      - name: Extract Version
        id: version
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          name: Resources ${{ steps.version.outputs.VERSION }}
          draft: true
          files: '*.tar'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  get_ovmf_uefi_file:
    name: Get OVMF UEFI files
    runs-on: ubuntu-latest
    container: alpine:3.21
    steps:
      - name: Install OVMF
        run: apk add ovmf --no-cache

      - name: Persist OVMF file
        uses: actions/upload-artifact@v4
        with:
          name: ovmf_file
          path: /usr/share/OVMF/OVMF.fd
          retention-days: 1

  build_qemu_macos:
    name: Build QEMU on macOS-13
    runs-on: macos-13
    needs: [get_ovmf_uefi_file]
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/download-artifact@v4
        with:
          name: ovmf_file

      - name: Run CI Script
        run: ./ci.rb

      - name: Run Tests
        run: ./test.rb

      - name: Extract Version
        id: version
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          name: Resources ${{ steps.version.outputs.VERSION }}
          draft: true
          files: '*.tar'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
